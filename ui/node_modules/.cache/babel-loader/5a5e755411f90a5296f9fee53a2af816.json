{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nexport var login = function login(username, password) {\n  return function (dispatch) {\n    return AuthService.login(username, password).then(function (resp) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {\n          user: resp\n        }\n      });\n      return Promise.resolve();\n    }, function (error) {\n      var message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message\n      });\n      return Promise.reject();\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    AuthService.logout();\n    dispatch({\n      type: LOGOUT\n    });\n    return Promise.resolve();\n  };\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","login","username","password","dispatch","then","resp","type","payload","user","Promise","resolve","error","message","response","data","toString","reject","logout"],"sources":["/home/projects/pern-app/ui/src/actions/auth.actions.js"],"sourcesContent":["import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n} from \"./types\";\nimport AuthService from \"../services/auth.service\";\n\nexport const login = (username, password) => (dispatch) => {\n    return AuthService.login(username, password).then(\n        (resp) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: { user: resp },\n            });\n            return Promise.resolve();\n        },\n        (error) => {\n            const message = (error.response && error.response.data &&\n              error.response.data.message) || error.message || error.toString();\n            dispatch({ type: LOGIN_FAIL });\n            dispatch({ type: SET_MESSAGE, payload: message });\n            return Promise.reject();\n        }\n    );\n};\n\nexport const logout = () => (dispatch) => {\n    AuthService.logout();\n    dispatch({\n        type: LOGOUT,\n    });\n    return Promise.resolve();\n\n};"],"mappings":"AAAA,SACIA,aADJ,EAEIC,UAFJ,EAGIC,MAHJ,EAIIC,WAJJ,QAKO,SALP;AAMA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,QAAX;EAAA,OAAwB,UAACC,QAAD,EAAc;IACvD,OAAOJ,WAAW,CAACC,KAAZ,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCE,IAAtC,CACH,UAACC,IAAD,EAAU;MACNF,QAAQ,CAAC;QACLG,IAAI,EAAEX,aADD;QAELY,OAAO,EAAE;UAAEC,IAAI,EAAEH;QAAR;MAFJ,CAAD,CAAR;MAIA,OAAOI,OAAO,CAACC,OAAR,EAAP;IACH,CAPE,EAQH,UAACC,KAAD,EAAW;MACP,IAAMC,OAAO,GAAID,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,IAAjC,IACfH,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBF,OADN,IACkBD,KAAK,CAACC,OADxB,IACmCD,KAAK,CAACI,QAAN,EADnD;MAEAZ,QAAQ,CAAC;QAAEG,IAAI,EAAEV;MAAR,CAAD,CAAR;MACAO,QAAQ,CAAC;QAAEG,IAAI,EAAER,WAAR;QAAqBS,OAAO,EAAEK;MAA9B,CAAD,CAAR;MACA,OAAOH,OAAO,CAACO,MAAR,EAAP;IACH,CAdE,CAAP;EAgBH,CAjBoB;AAAA,CAAd;AAmBP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;EAAA,OAAM,UAACd,QAAD,EAAc;IACtCJ,WAAW,CAACkB,MAAZ;IACAd,QAAQ,CAAC;MACLG,IAAI,EAAET;IADD,CAAD,CAAR;IAGA,OAAOY,OAAO,CAACC,OAAR,EAAP;EAEH,CAPqB;AAAA,CAAf"},"metadata":{},"sourceType":"module"}